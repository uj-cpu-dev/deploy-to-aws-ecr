name: CI/CD Pipeline

on:
  workflow_call:
    inputs:
      language:
        required: true
        type: string
      backend_dynamodb_table:
        description: DynamoDB table for State lock
        default: "terraform-backend-ddb"
        type: string
      backend_s3_bucket:
        description: Name of the S3bucket for Terraform backend
        default: "terraform-backend-primary-region"
        type: string

env:
  AWS_REGION: us-east-1
  IMAGE_REPO_NAME: my-java-app
  AWS_ACCOUNT_ID: 992382383822

permissions:
  contents: read
  id-token: write
  packages: write
  actions: write

jobs:
  terraform-provision:
    name: Terraform Provisioning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Workflow Repository
        uses: actions/checkout@v4
        with:
          repository: uj-cpu-dev/deploy-to-aws-ecr
          ref: main

      - name: Debug Entire Directory
        working-directory: terraform
        run: |
          echo "Listing all directories:"
          ls -la

  generate-pipeline:
    name: Generate Pipeline
    needs: terraform-provision
    runs-on: ubuntu-latest
    outputs:
      language: ${{ steps.detect.outputs.language }}
      java_version: ${{ steps.extract-java.outputs.version }}
      node_version: ${{ steps.extract-node.outputs.version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5  # Updated to latest version
        with:
          python-version: '3.9'

      - name: Detect Project Type
        id: detect
        run: |
          if [ -f "package.json" ]; then
            echo "language=nodejs" >> $GITHUB_OUTPUT
          elif [ -f "pom.xml" ]; then
            echo "language=java" >> $GITHUB_OUTPUT
          elif [ -f "build.gradle" ]; then 
            echo "language=gradle" >> $GITHUB_OUTPUT
          elif [ -f "go.mod" ]; then
            echo "language=go" >> $GITHUB_OUTPUT
          else
            echo "language=unknown" >> $GITHUB_OUTPUT
          fi

      - name: Extract Java Version
        if: steps.detect.outputs.language == 'java'
        id: extract-java
        run: |
          JAVA_VERSION=$(grep '<java.version>' pom.xml | head -n 1 | sed 's/.*<java.version>\(.*\)<\/java.version>.*/\1/')
          echo "version=$JAVA_VERSION" >> $GITHUB_OUTPUT

      - name: Extract Node.js Version
        if: steps.detect.outputs.language == 'nodejs'
        id: extract-node
        run: |
          NODE_VERSION=$(jq -r '.engines.node // "16"' package.json)
          echo "version=$NODE_VERSION" >> $GITHUB_OUTPUT
